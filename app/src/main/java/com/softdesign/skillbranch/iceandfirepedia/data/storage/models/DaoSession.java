package com.softdesign.skillbranch.iceandfirepedia.data.storage.models;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.softdesign.skillbranch.iceandfirepedia.data.storage.models.Alias;
import com.softdesign.skillbranch.iceandfirepedia.data.storage.models.Book;
import com.softdesign.skillbranch.iceandfirepedia.data.storage.models.House;
import com.softdesign.skillbranch.iceandfirepedia.data.storage.models.SwornMember;
import com.softdesign.skillbranch.iceandfirepedia.data.storage.models.Title;

import com.softdesign.skillbranch.iceandfirepedia.data.storage.models.AliasDao;
import com.softdesign.skillbranch.iceandfirepedia.data.storage.models.BookDao;
import com.softdesign.skillbranch.iceandfirepedia.data.storage.models.HouseDao;
import com.softdesign.skillbranch.iceandfirepedia.data.storage.models.SwornMemberDao;
import com.softdesign.skillbranch.iceandfirepedia.data.storage.models.TitleDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig aliasDaoConfig;
    private final DaoConfig bookDaoConfig;
    private final DaoConfig houseDaoConfig;
    private final DaoConfig swornMemberDaoConfig;
    private final DaoConfig titleDaoConfig;

    private final AliasDao aliasDao;
    private final BookDao bookDao;
    private final HouseDao houseDao;
    private final SwornMemberDao swornMemberDao;
    private final TitleDao titleDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        aliasDaoConfig = daoConfigMap.get(AliasDao.class).clone();
        aliasDaoConfig.initIdentityScope(type);

        bookDaoConfig = daoConfigMap.get(BookDao.class).clone();
        bookDaoConfig.initIdentityScope(type);

        houseDaoConfig = daoConfigMap.get(HouseDao.class).clone();
        houseDaoConfig.initIdentityScope(type);

        swornMemberDaoConfig = daoConfigMap.get(SwornMemberDao.class).clone();
        swornMemberDaoConfig.initIdentityScope(type);

        titleDaoConfig = daoConfigMap.get(TitleDao.class).clone();
        titleDaoConfig.initIdentityScope(type);

        aliasDao = new AliasDao(aliasDaoConfig, this);
        bookDao = new BookDao(bookDaoConfig, this);
        houseDao = new HouseDao(houseDaoConfig, this);
        swornMemberDao = new SwornMemberDao(swornMemberDaoConfig, this);
        titleDao = new TitleDao(titleDaoConfig, this);

        registerDao(Alias.class, aliasDao);
        registerDao(Book.class, bookDao);
        registerDao(House.class, houseDao);
        registerDao(SwornMember.class, swornMemberDao);
        registerDao(Title.class, titleDao);
    }
    
    public void clear() {
        aliasDaoConfig.getIdentityScope().clear();
        bookDaoConfig.getIdentityScope().clear();
        houseDaoConfig.getIdentityScope().clear();
        swornMemberDaoConfig.getIdentityScope().clear();
        titleDaoConfig.getIdentityScope().clear();
    }

    public AliasDao getAliasDao() {
        return aliasDao;
    }

    public BookDao getBookDao() {
        return bookDao;
    }

    public HouseDao getHouseDao() {
        return houseDao;
    }

    public SwornMemberDao getSwornMemberDao() {
        return swornMemberDao;
    }

    public TitleDao getTitleDao() {
        return titleDao;
    }

}
